<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

    <http auto-config="true" access-denied-page="/spring/security/accessDenied.jsp">
        <form-login login-page="/spring/security/login.jsp"
                authentication-failure-url="/spring/security/login.jsp?error=true"
                default-target-url="/spring/security/index.jsp" />
    </http>

    <authentication-provider>
        <jdbc-user-service data-source-ref="springSecurityDataSource"
            users-by-username-query="select username,password,status as enabled
                                       from user
                                      where username=?"
            authorities-by-username-query="select u.username,r.name as authority
                                             from user u
                                             join user_role ur
                                               on u.id=ur.user_id
                                             join role r
                                               on r.id=ur.role_id
                                            where u.username=?"/>
    </authentication-provider>

    <beans:bean id="filterSecurityInterceptor"
        class="org.springframework.security.intercept.web.FilterSecurityInterceptor" autowire="byType">
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" />
        <beans:property name="objectDefinitionSource" ref="filterInvocationDefinitionSource" />
    </beans:bean>

    <beans:bean id="filterInvocationDefinitionSource"
        class="com.example.spring.security.JdbcFilterInvocationDefinitionSourceFactoryBean">
        <beans:property name="dataSource" ref="springSecurityDataSource"/>
        <beans:property name="resourceQuery" value="
            select re.res_string,r.name
              from role r
              join resc_role rr
                on r.id=rr.role_id
              join resc re
                on re.id=rr.resc_id
            order by re.priority
        "/>
    </beans:bean>
	 <!-- RESOURCE DEFINITIONS -->  
	 <beans:bean id="propertyConfigurer"  
	     class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	     <beans:property name="locations">  
	         <beans:list>  
	             <beans:value>classpath*:spring-security-jdbc.properties</beans:value>  
	         </beans:list>  
	     </beans:property>  
	 </beans:bean>  
    <beans:bean id="springSecurityDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="${jdbc.driver}"/>
        <beans:property name="url" value="${jdbc.url}"/>
        <beans:property name="username" value="${jdbc.username}"/>
        <beans:property name="password" value="${jdbc.password}"/>
    </beans:bean>
</beans:beans>
